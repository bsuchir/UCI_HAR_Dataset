patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
>colnames(my_data,cnames)
colnames(my_data,cnames)
?colnames
colnames(my_data)<-cnames
my_data
exit
kill
kill -1 -1
library(swirl)
swirl()
true==TRUE
TRUE==TRUE
(FALSE==TRUE)==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!TRUE
5!=7
5==7
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 >8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(true,false)
xor(5==6,!FALSE)
int<-sample(10)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
source('/var/folders/76/1q41h_yj1mbgz3qm9x5k12xc0000gn/T//RtmpK8KtAh/boring_function.R')
source('/var/folders/76/1q41h_yj1mbgz3qm9x5k12xc0000gn/T//RtmpK8KtAh/boring_function.R')
submit
invisible()
source('/var/folders/76/1q41h_yj1mbgz3qm9x5k12xc0000gn/T//RtmpK8KtAh/boring_function.R')
submit
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("programming","is","fun!")
paste("Programming","is","fun!")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
telegram("Good","Morning")
submit()
mod_libs("Hawai,"black","pan")
mod_libs("Hawai","black","pan")
mad_libs("Hawai","black","pan")
submit()
%p%("I","Love","R")
%p%("I","Love")
info()
%p%("I","Love")
nxt()
paste('I','Love')
'I' %p% 'love' %p% 'R!'
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3="October 17, 1986 08:24"
t3<-"October 17, 1986 08:24"
t4<-strptime(t3,"%B %d %Y %H:%M")
t4<-strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() >t1
Sys.time() -t1
difftime(Sys.time(),t1,units='days')
exit
Data<-read.csv("/Users/suchir/Desktop/RO_RMU_Sales_Data_11_07_2017.csv", stringsAsFactors = F)
View(Data)
names(Data)
any(is.na(Data))
any(is.na(Data$Jan.17))
any(Data$Jan.17==0)
any(is.na(Data$Jan.17.1))
any(Data$Jan.17.1==0)
Data<-read.csv("/Users/suchir/Desktop/RO_RMU_Sales_Data_11_07_2017.csv", stringsAsFactors = F)
any(Data$Jan.17.1==0)
names(Data)
Data$Jan.17.1<-ifelse(Data$Jan.17.1==0,NA,Data$Jan.17.1)
Data$Mar.17.1<-ifelse(Data$Mar.17.1==0,NA,Data$Mar.17.1)
Data$Apr.17.1<-ifelse(Data$Apr.17.1==0,NA,Data$Apr.17.1)
Data$Feb.17.1<-ifelse(Data$Feb.17.1==0,NA,Data$Feb.17.1)
Data$May.17.1<-ifelse(Data$May.17.1==0,NA,Data$May.17.1)
Data$Jun.17.1<-ifelse(Data$Jun.17.1==0,NA,Data$Jun.17.1)
Mean_Jan<-mean(Data$Jun.17.1,na.rm = T)
Mean_Jan
Mean_Jan<-mean(Data$Jun.17.1,na.rm = T)
Mean_Feb<-mean(Data$Feb.17.1,na.rm = T)
Mean_Mar<-mean(Data$Mar.17.1,na.rm = T)
Mean_Apr<-mean(Data$Apr.17.1,na.rm = T)
Mean_May<-mean(Data$May.17.1,na.rm = T)
Mean_Jun<-mean(Data$Jun.17.1,na.rm = T)
sd_Jan<-sd(Data$Jun.17.1,na.rm = T)
sd_Feb<-sd(Data$Feb.17.1,na.rm = T)
sd_Mar<-sd(Data$Mar.17.1,na.rm = T)
sd_Apr<-sd(Data$Apr.17.1,na.rm = T)
sd_May<-sd(Data$May.17.1,na.rm = T)
sd_Jun<-sd(Data$Jun.17.1,na.rm = T)
Data$Jan_Normalised<-(Data$Jan.17.1-Mean_Jan)/sd_Jan
Data$Jan_Normalised<-(Data$Jan.17.1-Mean_Jan)/sd_Jan
Data$Feb_Normalised<-(Data$Feb.17.1-Mean_Feb)/sd_Feb
Data$Mar_Normalised<-(Data$Mar.17.1-Mean_Mar)/sd_Mar
Data$Apr_Normalised<-(Data$Apr.17.1-Mean_Apr)/sd_Apr
Data$May_Normalised<-(Data$May.17.1-Mean_May)/sd_May
Data$Jun_Normalised<-(Data$Jun.17.1-Mean_Jun)/sd_Jun
View(Data)
Data$First_3_Month_Normalised_Average<-mean(Data$Jan_Normalised,Data$Feb_Normalised,Data$Mar_Normalised,na.rm = T)
class(Data$Jan_Normalised)
for(i in 1:nrow(Data))
{
Data[i,"First_3_Month_Normalised_Average"]<-mean(Data[i,"Jan_Normalised"],Data[i,"Feb_Normalised"],Data[i,"Mar_Normalised"],na.rm = T)
Data[i,"Last_3_Month_Normalised_Average"]<-mean(Data[i,"Apr_Normalised"],Data[i,"May_Normalised"],Data[i,"Jun_Normalised"],na.rm = T)
}
i
Data[i,"Jan_Normalised"]
Data[i,"Feb_Normalised"]
Data[i,"Mar_Normalised"]
mean(3,NA,2,na.rm = T)
mean(c(3,2,NA),na.rm = T)
for(i in 1:nrow(Data))
{
Data[i,"First_3_Month_Normalised_Average"]<-mean(c(Data[i,"Jan_Normalised"],Data[i,"Feb_Normalised"],Data[i,"Mar_Normalised"]),na.rm = T)
Data[i,"Last_3_Month_Normalised_Average"]<-mean(c(Data[i,"Apr_Normalised"],Data[i,"May_Normalised"],Data[i,"Jun_Normalised"]),na.rm = T)
}
mean(c(2,NA,3),na.rm = T)
Data$Perc_Change_Normalised<-(Data$Last_3_Month_Normalised_Average-Data$First_3_Month_Normalised_Average)/Data$First_3_Month_Normalised_Average
Data$Accept<-ifelse(Data$Perc_Change_Normalised<(-.15),"No","Approve")
table(Data$Accept)
any(is.na(Data$Perc_Change_Normalised))
length(which(is.na(Data$Perc_Change_Normalised)))
View(Data)
install.packages("xlsx")
install.packages("xlsx")
library("xlsx")
install.packages("rJava")
library("rJava")
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
install.packages("xlsx")
install.packages("xlsx")
library("xlsx")
install.packages("rJava")
library("rJava")
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
library("swirl")
rm(list=ls())
swirl()
?read.csv
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time())
select(cran,-time)
X:size
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version="3.1.1",country="US")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,country=="India",r_version<"3.0.2")
filter(cran,country=="IN",r_version<="3.0.2")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
cran3<-mutate(cran3,correct_size=size+1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
rm(list=ls())
library("swirl")
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package=lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8,minutes=34,seconds=55)
this_moment
this_moment<-update(this_moment,hms(now()))
this_moment<-update(this_moment,hms(now()))
hms(now())
HMS(now())
now()
hms(now())
this_moment<-update(this_moment,hours=23,minutes=20,seconds=30)
this_moment
?now
nyc <-now(tzone="America/New_York")
nyc
depart <- nyc+days(2)
depart
depart <-update(depart,h=17,m=34)
depart <-update(depart,hours=17,minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive,tzone="Asia/Hong_Kong")
arrive<-with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June,17,2008")
last_time <- mdy("June,17,2008", tz="Singapore")
last_time <- mdy("June 17,2008", tz="Singapore")
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval()
?interval
how_long<-interval(last_time, arrive)
as.period(how_long)
stopwatch()
rm(list=ls())
q()
getwd()
setwd("/Users/suchir/Documents/Data_Science_Course/"
)
ls()
dir()
setwd("R_Programming/")
dir()
setwd("rprog_data_ProgAssignment3-data/")
dir()
cd ..
cd /
setwd("/Users/suchir/Documents/Data_Science_Course/R_Programming/UCI HAR Dataset/")
ls()
dir()
setwd("train")
dir()
X_train_data<-read.table("X_train.txt")
View(X_train_data)
setwd("/Users/suchir/Documents/Data_Science_Course/R_Programming/UCI HAR Dataset/")
dir()
features_labels<-read.table("features.txt")
View(features_labels)
colnames(X_train_data)
colnames(X_train_data)<-features_labels[,2]
colnames(X_train_data)
dir()
setwd("train")
dir()
y_train_data<-read.table("y_train.txt")
View(y_train_data)
dir()
ls()
colnames(y_train_data)<-"Activity Lablel"
cbind(X_train_data,y_train_data)
Combined_train_data<-cbind(X_train_data,y_train_data)
dir()
setwd("/Users/suchir/Documents/Data_Science_Course/R_Programming/UCI HAR Dataset/")
dir()
activity_label<-read.table("activity_labels.txt")
View(activity_label)
ls()
y_train_data2<-mutate(y_train_data,activity_name=activity_label[y_train_data,2])
library(dplyr)
y_train_data2<-mutate(y_train_data,activity_name=activity_label[y_train_data,2])
class(activity_label)
View(y_train_data)
y_train_data2<-mutate(y_train_data,activity_name=activity_label[y_train_data$Activity Lablel,2])
y_train_data2<-mutate(y_train_data,activity_name=activity_label[y_train_data$'Activity Label',2])
Combined_train_data[1,562]
a<-Combined_train_data[1,562]
class(a)
rm(a)
Combined_train_data[1,563]<-activity_label[1,2]
View(Combined_train_data)
View(Combined_train_data[,563])
Combined_train_data[1,563]<-as.character(activity_label[1,2])
for i in 1:nrow(Combined_train_data){
activity_label_index <-Combined_train_data[i,activity_label_col_number]
Combined_train_data[i,activity_label_col_number+1] <-as.character(activity_label[activity_label_index,2])
}
activity_label_col_number <-ncol(Combined_train_data)
nrow(Combined_train_data)
activity_label_col_number <-562
for i in 1:nrow(Combined_train_data){
activity_label_index <-Combined_train_data[i,activity_label_col_number]
Combined_train_data[i,activity_label_col_number+1] <-as.character(activity_label[activity_label_index,2])
}
activity_label_col_number <-562
for (i in 1:nrow(Combined_train_data)) {
activity_label_index <-Combined_train_data[i,activity_label_col_number]
Combined_train_data[i,activity_label_col_number+1] <-as.character(activity_label[activity_label_index,2])
}
Combined_train_data[,563]
dir()
cat "features.txt"
cat ("features.txt")
cat (features.txt)
dir()
setwd("/Users/suchir/Documents/Data_Science_Course/R_Programming/UCI HAR Dataset/train")
dir()
subject_train<-read.table("subject_train.txt")
Combined_train_data<-cbind(Combined_train_data,subject_train)
setwd("/Users/suchir/Documents/Data_Science_Course/R_Programming/UCI HAR Dataset/train/Inertial Signals/")
dir()
body_acc_x_train<-read.table("body_acc_x_train.txt")
colnames(Combined_train_data[564])
colnames(Combined_train_data[564])<-"Activity Name"
colnames(Combined_train_data[564])
colnames(Combined_train_data)[564]<-"Activity Name"
colnames(Combined_train_data[564])
colname(subject_train)<-"Subject Number"
colnames(subject_train)<-"Subject Number"
subject_train
colnames(subject_train)
colnames(subject_train)<-"Subject Number"
setwd("/Users/suchir/Documents/Data_Science_Course/R_Programming/UCI HAR Dataset/test")
X_test_data<-read.table("X_test.txt")
colnames(X_test_data)<-features_labels[,2]
y_test_data<-read.table("y_test.txt")
colnames(y_test_data)<-"Activity Lablel"
Combined_test_data<-cbind(X_test_data,y_test_data)
activity_label_col_number <-ncol(Combined_test_data)
activity_label_col_number
nrow(Combined_test_data)
for (i in 1:nrow(Combined_test_data)) {
activity_label_index <-Combined_test_data[i,activity_label_col_number]
Combined_test_data[i,activity_label_col_number+1] <-as.character(activity_label[activity_label_index,2])
}
colnames(Combined_test_data)[activity_label_col_number+1]<-"Activity Name"
subject_test<-read.table("subject_test.txt")
colnames(subject_test)<-"Subject Number"
View(subject_test)
Combined_test_data<-cbind(Combined_test_data,subject_test)
Combined_data<-rbind(Combined_train_data,Combined_test_data)
colnames(Combined_test_data$`Activity Lablel`)<-"Activity Label"
colnames(Combined_test_data)[563]<-"Activity Label"
Combined_data<-rbind(Combined_train_data,Combined_test_data)
colnames[Combined_train_data]
colnames(Combined_train_data)
colnames(Combined_train_data)[562]="Activity Label"
colnames(Combined_train_data)[563]="Activity Name"
colnames(Combined_train_data)[564]="Subject Number"
colname(Combined_test_data)
colnames(Combined_test_data)
colnames(Combined_test_data)[562]="Activity Label"
colnames(Combined_test_data)[563]="Activity Name"
Combined_data<-rbind(Combined_train_data,Combined_test_data)
grep("mean()",colnames(Combined_train_data),ignore.case=TRUE)
grep("mean()",colnames(Combined_train_data),ignore.case=false)
grep("mean()",colnames(Combined_train_data),ignore.case=F)
grep("mean\\(\\)",colnames(Combined_train_data),ignore.case=F)
mean_indices<-grep("mean\\(\\)",colnames(Combined_train_data),ignore.case=F)
std_indices<-grep("std\\(\\)",colnames(Combined_train_data),ignore.case=F)
mean_indices<-grep("mean\\(\\)",colnames(Combined_train_data),ignore.case=F)
mean_indices
std_indices
class(mean_indices)
all_indices<-append(mean_indices,std_indices)
all_indices
sorted_all_indices<-sort(all_indices)
all_indices
mean_indices<-grep("mean\\(\\)",colnames(Combined_data),ignore.case=F)
std_indices<-grep("std\\(\\)",colnames(Combined_data),ignore.case=F)
all_indices<-append(mean_indices,std_indices)
sorted_all_indices<-sort(all_indices)
all_indices
sorted_all_indices
Combined_data[,sorted_all_indices]
Filtered_combined_data<-Combined_data[,sorted_all_indices]
View(Filtered_combined_data)
all_indices<-append(mean_indices,std_indices,562,563,564)
all_indices<-append(mean_indices,std_indices,c(562,563,564)
)
all_indices
c(562,563,564)
c1<-c(562,563,564)
c2<-c(1,2,3)
append(c2,c1)
other_indices<-c(562,563,564)
all_indices<-append(all_indices,other_indices)
sorted_all_indices<-sort(all_indices)
Filtered_combined_data<-Combined_data[,sorted_all_indices]
Filtered_combined_data<-Combined_data[,sorted_all_indices]
library(tidyr)
ncol(Filtered_combined_data)
install.packages("reshape")
gather(Filtered_combined_data,"Subject Number","Activity Name")
gather(Filtered_combined_data,tBodyAcc-mean()-X:fBodyBodyGyroJerkMag-std(),tBodyAcc-mean()-X:fBodyBodyGyroJerkMag-std())
gather(Filtered_combined_data,parameter,measurement,tBodyAcc-mean()-X:fBodyBodyGyroJerkMag-std())
gather(Filtered_combined_data,parameter,measurement,"tBodyAcc-mean()-X":"fBodyBodyGyroJerkMag-std()")
gather(Filtered_combined_data,parameter,measurement,"tBodyAcc-mean()-X":"fBodyBodyGyroJerkMag-std()",factor_key = F)
gather(Filtered_combined_data,parameter,measurement,"tBodyAcc-mean()-X":"fBodyBodyGyroJerkMag-std()",factor_key = F,na.rm=TRUE)
sapply(Filtered_combined_data,class)
ncols(Filtered_combined_data)
ncols(Filtered_combined_data)
ncol(Filtered_combined_data)
gather(Filtered_combined_data,Parameter,Measurement,1:66,na.rm=TRUE)
gathered_data<-gather(Filtered_combined_data,Parameter,Measurement,1:66,na.rm=TRUE)
View(gathered_data)
group_by(gathered_data,1:4,add=TRUE)
group_by(gathered_data,`Activity Label`,`Activity Name`,`Subject Number`,Parameter,add=TRUE)
group_by(gathered_data,`Activity Label`,`Activity Name`,`Subject Number`,Parameter,add=TRUE) %>% summarise(Measurement = mean(Measurement))
gathered_data<-gather(Filtered_combined_data,Parameter,Measurement,1:66,na.rm=TRUE)
group_by(gathered_data,`Activity Label`,`Activity Name`,`Subject Number`,Parameter,add=TRUE) %>%
summarise(Measurement = mean(Measurement))
gathered_data
gathered_data<-gather(Filtered_combined_data,Parameter,Measurement,1:66,na.rm=TRUE)
gathered_summarized_data<-group_by(gathered_data,`Activity Label`,`Activity Name`,`Subject Number`,Parameter,add=TRUE) %>%
summarise(Measurement = mean(Measurement))
gathered_summarized_data
tidy_data <- spread(gathered_summarized_data,Parameter,Measurement)
tidy_data
View(tidy_data)
write.csv(tidy_data,file="tidy_output.csv")
ls()
dir()
write.table(tidy_data,file="tidy_output.txt",row.names = F)
